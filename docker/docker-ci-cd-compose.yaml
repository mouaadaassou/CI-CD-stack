version: "3.4"
services:
  jenkins:
    container_name: jenkins-server
    image: jenkins/jenkins:lts
    ports:
      - "8080:8080"
      - "5000:5000"
    volumes:
      - "/home/moaad/Volumes/jenkinsV:/var/jenkins_home"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          cpus: '0.25'
          memory: 8G

  sonar:
    container_name: sonar-server
    image: sonarqube:7.9.1-community
    ports:
      - "9000:9000"
    volumes:
      - "/home/moaad/Volumes/sonarV/conf:/opt/sonarqube/conf"
      - "/home/moaad/Volumes/sonarV/data:/opt/sonarqube/data"
      - "/home/moaad/Volumes/sonarV/logs:/opt/sonarqube/logs"
      - "/home/moaad/Volumes/sonarV/extensions:/opt/sonarqube/extensions"
      - "/home/moaad/Volumes/sonarV/sysctl.conf:/etc/sysctl.conf"
    environment:
      - "sonar.jdbc.username=sonar"
      - "sonar.jdbc.password=p@sswd"
      - "sonar.jdbc.url=jdbc:postgresql://postgres/sonar"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          cpus: '0.25'
          memory: 6G

  postgres:
    container_name: postgres
    image: postgres:11.4
    volumes:
      - "/home/moaad/Volumes/postgresV:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_USER=sonar"
      - "POSTGRES_PASSWORD=p@sswd"
      - "POSTGRES_DB=sonar"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          cpus: '0.25'
          memory: 4G
